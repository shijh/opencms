ERR_HEADER_IFMODIFIEDSINCE_FORMAT_3                  =被用户代理{1}发送的请求{0} 的头信息不是正确的HTTP数据格式："{2}"。查看：http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3.1 
ERR_ADD_COOKIE_0                                                        =试图添加null cookie时出错。
ERR_FLEXREQUESTDISPATCHER_CLASSCAST_EXCEPTION_1                         =对于内容管理系统的资源"{0}"没有实现CmsResourceLoader接口。
ERR_FLEXREQUESTDISPATCHER_ERROR_LOADING_CACHE_PROPERTIES_1              =为虚拟文件系统目标"{0}"载入缓存属性时出错。
ERR_FLEXREQUESTDISPATCHER_ERROR_LOADING_RESOURCE_FROM_CACHE_1           =为虚拟文件系统目标"{0}"从缓存中载入文件时出错。
ERR_FLEXREQUESTDISPATCHER_ERROR_READING_RESOURCE_1                      =对内容管理系统的资源"{0}"读取文件头时出错。
ERR_FLEXREQUESTDISPATCHER_INCLUSION_LOOP_1                              =虚拟文件系统目标"{0}"已经在早些时候包含进来了。
ERR_FLEXREQUESTDISPATCHER_VFS_ACCESS_EXCEPTION_0                        =内容管理系统的虚拟文件系统访问异常。

INIT_FLEXCACHE_CREATED_2                                                =。FlexCache：正在用参数enabled={0} cacheOffline={1}初始化

LOG_FLEXCACHEENTRY_ADDED_ENTRY_1                                        =已添加缓存记录到LRU缓存：{0}
LOG_FLEXCACHEENTRY_COULD_NOT_WRITE_TO_RESPONSE_1                        ={0} ：不能写入响应的输出流
LOG_FLEXCACHEENTRY_ENTRY_COMPLETED_1                                    =CmsFlexCacheEntry: 新记录已完成：{0}
LOG_FLEXCACHEENTRY_REMOVED_ENTRY_FOR_VARIATION_1                        =从FlexCache中删除变量{0}的记录
LOG_FLEXCACHEENTRY_SET_EXPIRATION_DATE_3                                =FlexCacheEntry: 新记录 expiration={0} now={1} remaining={2}
LOG_FLEXCACHEKEY_FOUND_1                                                =FlexCache: 发现资源{0}的预先计算好的键
LOG_FLEXCACHEKEY_GENERATED_1                                            =生成了用于响应的CmsFlexCacheKey：{0}
LOG_FLEXCACHEKEY_KEYMATCH_CACHE_ALWAYS_0                                =键匹配: 缓存=always
LOG_FLEXCACHEKEY_KEYMATCH_CACHE_NEVER_0                                 =键匹配: 缓存=never
LOG_FLEXCACHEKEY_KEYMATCH_CHECK_NO_PARAMS_0                             =键匹配: 正在检查没有参数
LOG_FLEXCACHEKEY_NOT_FOUND_1                                            =FlexCache: 没有发现用于资源{0}的预先计算好的键
LOG_FLEXCACHEKEY_PARSE_ERROR_1                                          =----- 解析键时出错：{0}
LOG_FLEXCACHEKEY_PARSE_FLEXKEY_3                                        =正在解析标记：{0} 键={1} 值={2}
LOG_FLEXCACHEKEY_PARSE_VALUES_1                                         =正在解析列表：{0}
LOG_FLEXCACHE_ADDED_ENTRY_1                                             =FlexCache: 已添加的记录是: {0}
LOG_FLEXCACHE_ADDED_ENTRY_FOR_RESOURCE_WITH_VARIATION_3                 =FlexCache: 为带有变量{2}的资源{1}添加记录{0}
LOG_FLEXCACHE_ADD_ENTRY_1                                               =FlexCache: 正在尝试为资源{0}添加记录
LOG_FLEXCACHE_ADD_ENTRY_WITH_VARIATION_2                                =FlexCache: 为资源{0}添加变量为{1}的记录 
LOG_FLEXCACHE_ADD_KEY_1                                                 =FlexCache: 为资源{0}添加预先计算的键
LOG_FLEXCACHE_CLEAR_0                                                   =完成FlexCache清除 - 调用了clear()方法
LOG_FLEXCACHE_CLEAR_ALL_0                                               =正在清除全部记录
LOG_FLEXCACHE_CLEAR_HALF_2                                              =清除了FlexCache的一部分 - 调用了clearOneHalf({0}, {1})
LOG_FLEXCACHE_CLEAR_KEYS_AND_ENTRIES_0                                  =正在清除离线的键和记录
LOG_FLEXCACHE_CLEAR_OFFLINE_ENTRIES_0                                   =正在清除离线的记录
LOG_FLEXCACHE_CLEAR_ONLINE_ENTRIES_0                                    =正在清除在线的记录
LOG_FLEXCACHE_CLEAR_ONLINE_KEYS_AND_ENTRIES_0                           =正在清除在线的键和记录
LOG_FLEXCACHE_PURGED_JSP_REPOSITORY_0                                   =已清除JSP存储！
LOG_FLEXCACHE_RECEIVED_EVENT_CLEAR_CACHE_0                              =FlexCache: 收到事件，正在清除缓存！
LOG_FLEXCACHE_RECEIVED_EVENT_CLEAR_CACHE_PARTIALLY_0                    =FlexCache: 收到事件，正在清除部分缓存！
LOG_FLEXCACHE_RECEIVED_EVENT_PURGE_REPOSITORY_0                         =FlexCache: 收到事件，正在清除JSP存储！
LOG_FLEXCACHE_RESOURCE_NOT_CACHEABLE_0                                  =FlexCache: 没有添加任何东西，因为这个访问资源的请求无法缓存！
LOG_FLEXCACHE_WILL_PURGE_JSP_REPOSITORY_0                               =正在清除JSP存储...
LOG_FLEXCONTROLLER_IGNORED_EXCEPTION_1                                  =忽略资源"{0}"的附加意外。
LOG_FLEXCONTROLLER_IGNORED_EXCEPTION_0                                  =忽略额外的意外(关联的资源未知)。
LOG_FLEXREQUESTDISPATCHER_ADDING_CACHE_PROPERTIES_2                     =FlexDispatcher: 文件{0}的缓存属性是: {1}
LOG_FLEXREQUESTDISPATCHER_INCLUDE_RESOURCE_1                            =FlexDispatcher: 内部调用，正在对{0}使用loader.service()来载入文件 
LOG_FLEXREQUESTDISPATCHER_INCLUDING_EXTERNAL_TARGET_1                   =FlexDispatcher: 正在送出外部目标{0}
LOG_FLEXREQUESTDISPATCHER_INCLUDING_TARGET_2                            =FlexDispatcher: 调用了Include，其中target={0} (ext_target={1})
LOG_FLEXREQUESTDISPATCHER_INVALID_CACHE_KEY_2                           =对外部资源{0}无效的FlexCache键: {1}
LOG_FLEXREQUESTDISPATCHER_LOADING_RESOURCE_FROM_CACHE_1                 =FlexDispatcher: 正在从缓存载入用于{0}的文件
LOG_FLEXREQUESTDISPATCHER_LOADING_RESOURCE_TYPE_1                       =FlexDispatcher: 正在载入资源类型{0}
LOG_FLEXREQUESTDISPATCHER_RESULT_1                                      =调用了没有显示的include - include的结果是:\n{0}
LOG_FLEXREQUESTKEY_CREATED_NEW_KEY_1                                    =正在为资源创建CmsFlexCacheKey: {0}
LOG_FLEXREQUEST_CREATED_NEW_REQUEST_1                                   =[FlexRequest] 正在为资源构建新的Flex访问请求: {0}
LOG_FLEXREQUEST_REUSING_FLEX_REQUEST_1                                  =[FlexRequest] 正在为资源重新使用Flex访问请求: {0}
LOG_FLEXRESPONSE_ADDING_HEADER_TO_ELEMENT_BUFFER_2                      =FlexResponse: 使用addHeader({0}, {1})方法添加到元素缓存
LOG_FLEXRESPONSE_ADDING_HEADER_TO_HEADERS_2                             =FlexResponse: 使用addHeader({0}, {1})方法添加到主要的页眉缓存
LOG_FLEXRESPONSE_ADDING_HEADER_TO_PARENT_RESPONSE_2                     =FlexResponse: 使用addHeader({0}, {1})方法传递到上一级
LOG_FLEXRESPONSE_ERROR_FLUSHING_OUTPUT_STREAM_1                         =FlexResponse: 调用在processCacheEntry()中调用m_out.clear()时产生意外\n意外: {0}
LOG_FLEXRESPONSE_ERROR_OUTPUT_STREAM_NULL_0                             =FlexResponse: 在processCacheEntry()中m_out == null
LOG_FLEXRESPONSE_ERROR_WRITING_TO_OUTPUT_STREAM_0                       =FlexResponse.writeToOutputStream(): 正在向包装的输出流直接写！
LOG_FLEXRESPONSE_FLUSHED_1                                              =CmsServletOutputStream: 调用了flush()方法！servletStream= {0}
LOG_FLEXRESPONSE_PARSE_ERROR_IN_CACHE_KEY_2                             =对资源{1}的缓存键{0}进行解析时出错！
LOG_FLEXRESPONSE_SENDREDIRECT_1                                         =FlexResponse: sendRedirect到目标{0}
LOG_FLEXRESPONSE_REDIRECTWARNING_3                                      =FlexResponse: 对访问的资源"{0}" (元素 "{1}")的潜在问题重定向到"{2}"
LOG_FLEXRESPONSE_SETTING_CONTENTTYPE_1                                  =FlexResponse: 调用了setContentType({0})方法
LOG_FLEXRESPONSE_SETTING_HEADER_IN_ELEMENT_BUFFER_2                     =FlexResponse: 在元素缓存中的setHeader({0}, {1})方法
LOG_FLEXRESPONSE_SETTING_HEADER_IN_HEADERS_2                            =FlexResponse: 使用了主要文件头缓存中的setHeader({0}, {1})方法
LOG_FLEXRESPONSE_SETTING_HEADER_IN_PARENT_RESPONSE_2                    =FlexResponse: 使用setHeader({0}, {1})方法传递到上一级
LOG_FLEXRESPONSE_TOPRESPONSE_SENDREDIRECT_1                             =FlexResponse: 对目标{0}使用getTopResponse.sendRedirect()方法 
