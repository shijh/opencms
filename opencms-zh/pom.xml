<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.opencms</groupId>
	<artifactId>opencms-zh</artifactId>
	<version>8.0.3</version>
	<packaging>jar</packaging>

	<name>opencms-zh</name>
	<description>OpenCms Chinese Localization</description>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<module.name>org.langhua.opencms.workplace</module.name>
	</properties>

	<repositories>
		<repository>
			<id>maven-central-1</id>
			<name>Maven2 Central Repository 1</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<!-- You can use a staging repository to test the pom files. -->
		<!-- <repository> <id>maven-staging</id> <name>Maven2 Staging Repository</name> 
			<url>https://oss.sonatype.org/content/repositories/orgopencms-102/</url> 
			</repository> -->
	</repositories>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<excludes>
						<exclude>**/org/opencms/**</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.2</version>
				<configuration>
					<descriptors>
						<descriptor>
							${basedir}/assembly.xml
						</descriptor>
					</descriptors>
					<finalName>${module.name}_${project.version}.0
					</finalName>
					<outputDirectory>
						${basedir}/target
					</outputDirectory>
					<workDirectory>
						${basedir}/target/assembly/work
					</workDirectory>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id><!-- this is used for inheritance merges -->
						<phase>package</phase><!-- append to the packaging phase. -->
						<goals>
							<goal>single</goal><!-- goals == mojos -->
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.6</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<!-- prepare source code from opencms-core -->
						<id>prepare-sourcecode</id>
						<phase>clean</phase>
						<configuration>
							<target>
								<ant antfile="${basedir}/build.xml" target="copy">
									<property name="opencms-core-basedir" value="/Users/ShiJinghai/git/opencms-core" />
									<!-- Change this to true when you want to copy new opencms source 
										code to this project. -->
									<property name="overwrite.sourcecode" value="false" />
								</ant>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>build opencms-zh.war</id>
						<!-- this should be run after make-assembly as the new built org.langhua.opencms.workplace is needed. -->
						<phase>package</phase>
						<configuration>
							<target>
								<unwar src="/Users/ShiJinghai/Downloads/opencms_8.0.3/opencms.war"
									dest="${basedir}/target/opencms.war" overwrite="false" />
								<copy todir="${basedir}/target/opencms.war/WEB-INF/classes" overwrite="true">
									<fileset dir="${basedir}/target/classes" />
								</copy>
								<copy file="${basedir}/target/${module.name}_${project.version}.0.zip" todir="${basedir}/target/opencms.war/WEB-INF/packages/modules" overwrite="true" />
								<war destfile="${basedir}/target/${artifactId}-${project.version}.war" basedir="${basedir}/target/opencms.war" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.opencms</groupId>
			<artifactId>opencms-core</artifactId>
			<version>8.0.3-rev</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.opencms</groupId>
			<artifactId>opencms-setup</artifactId>
			<version>8.0.3-rev</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.opencms</groupId>
			<artifactId>org.opencms.workplace.tools.searchindex</artifactId>
			<version>8.0.3-rev</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>


	<distributionManagement>
		<repository>
			<id>sonatype-nexus-staging</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>
</project>
